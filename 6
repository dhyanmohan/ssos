// 6a.l

%{
#include<stdio.h>
int sl=0;
int ml=0;
%}
%%
"/*"[a-zA-Z0-9' '\t\n]+"*/" ml++;
"//".* sl++;
%%
int main()
{
yyin=fopen("f1.c","r");
yyout=fopen("f2.c","w");
yylex();
fclose(yyin);
fclose(yyout);
printf("\n Number of single line comments are =%d\n",sl);
printf("\nNumber of multiline comments are=%d\n",ml);
return 0;
}


// f1.c

#include<stdio.h>
int main()
{
/*abcd
sbbnd
bbsg*/
printf("hello");
printf("world");
return 0;
}


// 6b.l

%{
#include <stdio.h>
#include "y.tab.h"
extern int yylval;
%}
%%
[ \t];
[+|-|*|/|=|<|>] {printf("operator is %s\n",yytext);return OP;}
[0-9]+ {yylval = atoi(yytext); printf("numbers is %d\n",yylval); return DIGIT;}
int|char|bool|float|void|for|do|while|if|else|return|void {printf("keyword is %s\n",yytext);return KEY;}
[a-zA-Z0-9]+ {printf("identifier is %s\n",yytext);return ID;}
. ;
%%


// 6b.y

%{
#include<stdio.h>
#include<stdlib.h>
int yyerror();
int yylex();
int id=0, dig=0, key=0, op=0;
%}

%token DIGIT ID KEY OP
%%
input:
DIGIT input { dig++; }
| ID input { id++; }
| KEY input { key++; }
| OP input {op++;}
| DIGIT { dig++; }
| ID { id++; }
| KEY { key++; }
| OP { op++;}
;
%%
#include<stdio.h>
int yyparse();
extern FILE *yyin;
int main() {
FILE *myfile = fopen("a.c","r");
if (!myfile)
{
printf("I can't open sam_input.c!");
return -1;
}
yyin = myfile;
do {
yyparse();
}while (!feof(yyin));
printf("numbers = %d\nKeywords = %d\nIdentifiers = %d\noperators =%d\n",dig, key,id, op);
return 1;
}
int yyerror()
{
printf("EEK, parse error! Message: ");
exit(-1);
}

//a.c

void main()
{
int a;
float bc;
char c;
char ch;
if(a==80)
printf("good");

else
printf("bad");
}
